How many possible ways you can create objects in javascript 

using object literal

using function constructor

using object.create()

using classes


let user={
  
  name:"rajani",
  age:39
  
  
}

//console.log(user.name)


function person(name, age){
  
  this.name=name
  
  this.age=age
  
  this.greet=function(){
  console.log('my name is' +this.name)
  
  }
}

const p = new person("rajani", 39)

console.log(p.name)
p.greet()


class student{
  
constructor(name,job){
  
  this.name=name
  
  this.job=job

}
  
 display(){
   
   console.log("my name is "+this.name + "job is " +this.job)
 }
 
 
}

const s = new student("rajani", "IT")

s.display()


const personprotoype={
 
 greet:function(){
   
   console.log("My name is "+this.name)
 } 
  
  
  
  
  
}

const p = Object.create(personprotoype)

p.name="rajani"

p.greet()


call(), apply() and bind()


call, apply and bind are the methods will allow you to control the value of this within the function


call method  invokes a function  with a given  this and arguments are provided one by one 

apply method invokes the function with a given this and allows you to pass the arguments as an array, apply is a single case usage and bind is a permenat one and we can call it again and again using a variable. 

bind creates a new function and 

const person ={
  
  firstname:"rajani",
  lastname : "kota"
  
}


function invite(greeting1,greeting2){
  
  console.log(greeting1 + " " +this.firstname+ " "+this.lastname+" "+greeting2)
  
}

invite.call(person, "hello", "how are you")



invite.apply(person,["Hello", "How are you"])

const employeinvite =invite.bind(person)

employeinvite("hi", "how are you")

What is Json?

Json is javascript object notation and it is a text based fomart for storing and transforming the data and it easy to learn and trouble shoot
 because it human-readbale . json values can be string,  numbers , arrays 
Data is in name/value pairs
Data is separated by commas
Curly braces hold objects
Square brackets hold arrays
JSON.parse() to convert the string into a JavaScript object:
var obj = JSON.parse(text);

Slice is used to extract the portion of an array or a string and return a new array or string and the original array or string is not modified. 

let arr=[1,2,3,4,5,6]

console.log(arr.slice(1,3))

console.log(arr)

let name = "rajani is a good"

console.log(name.slice(1,4))


let arr=[1,2,3,4,5,6]

console.log(arr.slice(1,3))

console.log(arr)

let name = "rajani is a good"

console.log(name.slice(1,4))

In splice you add the elements and remove the elements in the array. splice method modifies the original array 
array.splice(start, deletecount,item1, items)

let fruits =['orange', 'apple', 'mango', 'grapes']

console.log(fruits.splice(1,2))--deletes  apple ,mango
console.log(fruits)--orange , grapes

fruits.splice(1,0,'pears')

console.log(fruits)-[orange, pear , grape]

arr = [1,2,3,4]

arr1=arr.slice(0,2)
console.log(arr1)
console.log(arr)

arr2=[1,2,3,4,5]
arr3=arr2.splice(1,0,9)
console.log(arr3)
console.log(arr2)



what is difference between object and a map


object is a collection of a key and value pair. where the keys are only strings while map is also key and a value pair but keys can of any data type like numbers, string, Booleans and objects

const person={

name:"Rajani,
job:"IT"

}

const map = new Map();
map.set("name", "john")
map.set("age",27);
map.set("IT", "sector")
map.set(1,"one")
console.log(map)
console.log(map.get("name"))
console.log(map.has("age"))
console.log(map.size)
console.log(map.delete("age"))

for( let m of map.keys()){
  
 console.log(m) 
}

for(let [key, value] of map.entries()){
  
  console.log(`${key} : ${value}`)

what is difference between === and == 
=== : is strict Equality. It compares the values with out type conversion
== : It compares the values with type conversion
5=="5"- return true because javascript converts string to number before comparing
5==="5"- return false because it compares the values with out type conversion


arrow function


let sum=(a,b)=>a+b;

console.log(sum(4,5))

let multiply=(a,b)=>a*b

console.log(multiply(4,5))


what is first class function or it is also called as function expression

//Assign the function to a varaible
let add = function(x,y){
  
  return x+y
  
}

console.log(add(10,20))
 
functions are passed as an argument to another function 

function sayHello(name, callback){
  
 console.log(`hi ${name}`) 
 callback()
 
}


function goodmorning(){
  
  console.log("good morning ")
}

sayHello("rajani",goodmorning)


//let x=10
//let x=20

var x=10
var x=20



let y=10;
y=20

console.log(y)

//let cannot be redeclared
//whereas var can be redeclared

function add(){
  
  if(true){
    
  let x=10;  
  
   var y=20 
  }
  
 //console.log(x) 
 
 console.log(y) 
}

add()

//let is block-scope where as var is function scope 

console.log(k)  //with let keyword you cannot access before its initialization.
let k=20


console.log(x)  // with var key word you can access it before its declaration  but it will have the value undefined.
var i =20










